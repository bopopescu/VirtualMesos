--- mesosJNI.java 2010-05-12 14:19:47.000000000 -0700
+++ mesosJNI.java.patched 2010-05-12 14:50:31.000000000 -0700
@@ -157,49 +157,49 @@
   public final static native long SWIGMesosExecutorDriverUpcast(long jarg1);
 
   public static String SwigDirector_Scheduler_getFrameworkName(Scheduler self, long arg0) {
-    return self.getFrameworkName(new SchedulerDriver(arg0, false));
+    return self.getFrameworkName((arg0 == 0) ? null : new SchedulerDriver(arg0, false));
   }
   public static long SwigDirector_Scheduler_getExecutorInfo(Scheduler self, long arg0) {
-    return ExecutorInfo.getCPtr(self.getExecutorInfo(new SchedulerDriver(arg0, false)));
+    return ExecutorInfo.getCPtr(self.getExecutorInfo((arg0 == 0) ? null : new SchedulerDriver(arg0, false)));
   }
   public static void SwigDirector_Scheduler_registered(Scheduler self, long d, String fid) {
-    self.registered(new SchedulerDriver(d, false), fid);
+    self.registered((d == 0) ? null : new SchedulerDriver(d, false), fid);
   }
   public static void SwigDirector_Scheduler_resourceOffer(Scheduler self, long d, String oid, java.util.List<SlaveOffer> offers) {
-    self.resourceOffer(new SchedulerDriver(d, false), oid, offers);
+    self.resourceOffer((d == 0) ? null : new SchedulerDriver(d, false), oid, offers);
   }
   public static void SwigDirector_Scheduler_offerRescinded(Scheduler self, long d, String oid) {
-    self.offerRescinded(new SchedulerDriver(d, false), oid);
+    self.offerRescinded((d == 0) ? null : new SchedulerDriver(d, false), oid);
   }
   public static void SwigDirector_Scheduler_statusUpdate(Scheduler self, long d, long status) {
-    self.statusUpdate(new SchedulerDriver(d, false), new TaskStatus(status, false));
+    self.statusUpdate((d == 0) ? null : new SchedulerDriver(d, false), new TaskStatus(status, false));
   }
   public static void SwigDirector_Scheduler_frameworkMessage(Scheduler self, long d, long message) {
-    self.frameworkMessage(new SchedulerDriver(d, false), new FrameworkMessage(message, false));
+    self.frameworkMessage((d == 0) ? null : new SchedulerDriver(d, false), new FrameworkMessage(message, false));
   }
   public static void SwigDirector_Scheduler_slaveLost(Scheduler self, long d, String sid) {
-    self.slaveLost(new SchedulerDriver(d, false), sid);
+    self.slaveLost((d == 0) ? null : new SchedulerDriver(d, false), sid);
   }
   public static void SwigDirector_Scheduler_error(Scheduler self, long d, int code, String message) {
-    self.error(new SchedulerDriver(d, false), code, message);
+    self.error((d == 0) ? null : new SchedulerDriver(d, false), code, message);
   }
   public static void SwigDirector_Executor_init(Executor self, long d, long args) {
-    self.init(new ExecutorDriver(d, false), new ExecutorArgs(args, false));
+    self.init((d == 0) ? null : new ExecutorDriver(d, false), new ExecutorArgs(args, false));
   }
   public static void SwigDirector_Executor_launchTask(Executor self, long d, long task) {
-    self.launchTask(new ExecutorDriver(d, false), new TaskDescription(task, false));
+    self.launchTask((d == 0) ? null : new ExecutorDriver(d, false), new TaskDescription(task, false));
   }
   public static void SwigDirector_Executor_killTask(Executor self, long d, int taskId) {
-    self.killTask(new ExecutorDriver(d, false), taskId);
+    self.killTask((d == 0) ? null : new ExecutorDriver(d, false), taskId);
   }
   public static void SwigDirector_Executor_frameworkMessage(Executor self, long d, long message) {
-    self.frameworkMessage(new ExecutorDriver(d, false), new FrameworkMessage(message, false));
+    self.frameworkMessage((d == 0) ? null : new ExecutorDriver(d, false), new FrameworkMessage(message, false));
   }
   public static void SwigDirector_Executor_shutdown(Executor self, long d) {
-    self.shutdown(new ExecutorDriver(d, false));
+    self.shutdown((d == 0) ? null : new ExecutorDriver(d, false));
   }
   public static void SwigDirector_Executor_error(Executor self, long d, int code, String message) {
-    self.error(new ExecutorDriver(d, false), code, message);
+    self.error((d == 0) ? null : new ExecutorDriver(d, false), code, message);
   }
 
   private final static native void swig_module_init();
